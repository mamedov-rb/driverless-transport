plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.gorylenko.gradle-git-properties" version "2.3.2"
    id "com.avast.gradle.docker-compose" version "0.16.4"
    id 'groovy'
}

group = 'com.rb.alwaysontheroad'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

dockerCompose {
    useComposeFiles.add("src/test/resources/persistent-test-docker-compose.yaml")
    isRequiredBy(tasks.test)
}

ext {
    set('springCloudVersion', "2022.0.0")
    set('lombokVersion', '1.18.24')
    set('mapStructVersion', '1.5.2.Final')
    set('spockVersion', '2.0-groovy-3.0')
    set('commonsLang3Version', '3.12.0')
    set('commonsCollectionsVersion', '3.2.2')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
//    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.8'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
    implementation 'org.zalando:logbook-spring-boot-starter:2.14.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "commons-collections:commons-collections:${commonsCollectionsVersion}"

    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
